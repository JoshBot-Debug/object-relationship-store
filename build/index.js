"use strict";function e(e,r,a){const{__name:n,__primaryKey:t}=e;return{__name:n,__primaryKey:t,__has:r,__alias:a}}function r(e,r){for(const[a,n]of Object.entries(e))if(r[a]!==n)return!1;return!0}function a(e,r,a){const n={};function t(e){e.forEach((e=>{const t=a[e],i=r.__relationship[e];return i?"hasOne"===i.__has?n[e]=t[i.__primaryKey]:void(n[e]=t.map((e=>e[i.__primaryKey]))):n[e]=t}))}return t("*"===e?Object.keys(a):e),n}function n(e,i,o){const{from:s,where:_,fields:y,join:p}=o;if(Array.isArray(_))return _.flatMap((r=>n(e,i,Object.assign(Object.assign({},o),{where:r}))));let c=null;const m=e[s],l=i[s];if("*"===_&&(c=Object.values(l).map((e=>a(y,m,e)))),"object"==typeof _){const e=_[m.__primaryKey];if(e&&(c=a(y,m,l[e])),!e){c=[];for(const[e,n]of Object.entries(l)){r(_,n)&&c.push(a(y,m,n))}}}if("function"==typeof _){c=[];for(const[e,r]of Object.entries(l)){_(r)&&c.push(a(y,m,r))}}if(c&&p){const r=Array.isArray(c);r&&c.forEach((r=>{t(r,{join:p,from:s,model:e,state:i})})),r||t(c,{join:p,from:s,model:e,state:i})}return c}function t(e,r){const{join:a,from:i,model:o,state:s}=r,_=o[i];a.forEach((({on:r,fields:a,join:y})=>{if(e[r]){if(!_.__relationship[r])throw new Error(`Field "${r}" does not exist in object "${i}"`);if("hasOne"===_.__relationship[r].__has&&(e[r]=n(o,s,{fields:a,from:_.__relationship[r].__name,where:{[_.__relationship[r].__primaryKey]:e[r]}})),"hasMany"===_.__relationship[r].__has){const t=[];e[r].forEach((e=>{const i=n(o,s,{fields:a,from:_.__relationship[r].__name,where:{[_.__relationship[r].__primaryKey]:e}});i&&t.push(i)})),e[r]=t}y&&t(e[r],{from:_.__relationship[r].__name,join:y,model:o,state:s})}}))}"function"==typeof SuppressedError&&SuppressedError,exports.createRelationalObject=function(r,a,n){var t;const i=Object.assign(Object.assign({},a),{__name:r,__primaryKey:null!==(t=null==n?void 0:n.primaryKey)&&void 0!==t?t:"id",__relationship:{}});return Object.setPrototypeOf(i,{hasOne(r,a){const n=this,t=null!=a?a:r.__name,i=Object.entries(n.__relationship).find((([e,a])=>a.__name===r.__name));if(i&&n.__relationship[i[0]].__primaryKey===r.__primaryKey&&r.__primaryKey===n.__name)throw new Error(`"${r.__name}" reference already exists in "${n.__name}" as "${i[0]}" with the primary key (pk) "${r.__primaryKey}". "${n.__name}" table failed to create a hasOne relationship with "${t}" because it has the same primary key "${r.__primaryKey}" as "${i[0]}". The primary key for "${i[0]}" and "${t}" are not unique.`);return n[t]="hasOne",n.__relationship[t]=e(r,"hasOne",t),this},hasMany(r,a){const n=this,t=null!=a?a:r.__name,i=Object.entries(n.__relationship).find((([e,a])=>a.__name===r.__name));if(i&&n.__relationship[i[0]].__primaryKey===r.__primaryKey&&r.__primaryKey===n.__name)throw new Error(`"${r.__name}" reference already exists in "${n.__name}" as "${i[0]}" with the primary key (pk) "${r.__primaryKey}". "${n.__name}" table failed to create a hasOne relationship with "${t}" because it has the same primary key "${r.__primaryKey}" as "${i[0]}". The primary key for "${i[0]}" and "${t}" are not unique.`);return n[t]="hasMany",n.__relationship[t]=e(r,"hasMany",t),this}}),i},exports.createRelationalObjectIndex=function(e,r){return{__name:e,__objects:r.map((e=>e.__name))}},exports.createStore=function(e){const{relationalCreators:r,indexes:a,identifier:t}=e,i={},o=new Set,s=r.reduce(((e,r)=>{var a,n;const t=function(e,r){var a={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&r.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var t=0;for(n=Object.getOwnPropertySymbols(e);t<n.length;t++)r.indexOf(n[t])<0&&Object.prototype.propertyIsEnumerable.call(e,n[t])&&(a[n[t]]=e[n[t]])}return a}(r,["hasOne","hasMany"]);if(!t[null!==(n=null===(a=t.__relationship[t.__primaryKey])||void 0===a?void 0:a.__name)&&void 0!==n?n:t.__primaryKey])throw new Error(`The table "${t.__name}" does not have a primary key (pk) "${r.__primaryKey}", pk should be listed here ${JSON.stringify(r)}`);return Object.assign(Object.assign({},e),{[t.__name]:t})}),{});return null==a||a.forEach((e=>s[e.__name]=e)),{state:i,select:function(e){return n(s,i,e)},selectIndex:function(e,r){const a=i[e],t=[];return a.index.forEach((o=>{const _=a.objects[o],y=r[_.name];if(!y)throw new Error(`selectIndex() expected SelectOptions for "${_.name}" in the index "${e}".`);const p=n(s,i,Object.assign(Object.assign({},y),{where:{[_.primaryKey]:_.primaryKeyValue}}));if(!y.where)return t.push(p);y.where(p)&&t.push(p)})),t},upsert:function(e,r){var a;const n=Array.isArray(e)?e:[e],_=(null!==(a=null==r?void 0:r.indexes)&&void 0!==a?a:[]).map((e=>s[e]));function y(e){const{name:r,item:a,parentName:n,primaryKey:t,parentPrimaryKey:o,relationalObject:s}=e,_=Object.values(s.__relationship).find((e=>e.__name===n));if(_&&("hasOne"===_.__has&&(i[r][a[t]][_.__alias]=i[n][o]),"hasMany"===_.__has)){const e=i[r][a[t]][_.__alias],s=i[n][o],y=Array.isArray(e);if(y||(i[r][a[t]][_.__alias]=[s]),y){!!e.find((e=>e[t]===s[t]))||e.push(s)}}}function p(e){const{item:r,parentName:a,parentField:n,parentFieldHasMany:o,parentPrimaryKey:c}=e,m=function(e){for(const r in t)if(Object.prototype.hasOwnProperty.call(t,r)&&(0,t[r])(e))return r;throw new Error(`Identifier was not able to identify this object ${JSON.stringify(e)}`)}(r),l=s[m],h=l.__primaryKey;if(!r[h])throw new Error(`Expected object "${m}" to have a primaryKey "${h}".`);if(i[m]||(i[m]={}),i[m][r[h]]||(i[m][r[h]]={}),_.forEach((e=>{if(!e.__objects.includes(m))return;i[e.__name]||(i[e.__name]={index:[],objects:{}});const a=`${m}-${r[h]}`;i[e.__name].objects[a]||(i[e.__name].index.push(a),i[e.__name].objects[a]={name:m,primaryKey:h,primaryKeyValue:r[h]})})),Object.entries(r).forEach((([e,a])=>{if(l.__relationship[e]){return"hasMany"===l[e]?void r[e].forEach((a=>{p({item:a,parentPrimaryKey:r[h],parentField:e,parentName:m,parentFieldHasMany:!0})})):void p({item:r[e],parentPrimaryKey:r[h],parentField:e,parentName:m})}i[m][r[h]][e]=a})),a&&n&&c){if(o){const e=i[a][c][n],t=i[m][r[h]];if(!Array.isArray(e))return i[a][c][n]=[t],void y({name:m,item:r,parentName:a,parentPrimaryKey:c,primaryKey:h,relationalObject:l});return void(!!e.find((e=>e[h]===t[h]))||(e.push(t),y({name:m,item:r,parentName:a,parentPrimaryKey:c,primaryKey:h,relationalObject:l})))}y({name:m,item:r,parentName:a,parentPrimaryKey:c,primaryKey:h,relationalObject:l}),i[a][c][n]=i[m][r[h]]}}n.forEach((e=>p({item:e}))),o.forEach((e=>e()))},subscribe:function(e){return o.add(e),()=>o.delete(e)}}};
//# sourceMappingURL=index.js.map
