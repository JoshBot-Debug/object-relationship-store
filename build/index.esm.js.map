{"version":3,"file":"index.esm.js","sources":["../src/lib/createRelationalObject.ts","../src/lib/createRelationalObjectIndex.ts","../node_modules/tslib/tslib.es6.js","../src/lib/query/findMatch.ts","../src/lib/query/selectFields.ts","../src/lib/query/select.ts","../src/lib/utils.ts","../src/lib/createStore.ts","../src/lib/helper/withOptions.ts"],"sourcesContent":["import { type ORS} from \"./types\";\n\n\nfunction has<N extends string>(object: ORS.RelationalObject<N>, __has: ORS.Has<N>[\"__has\"], __alias: string,): ORS.Has<N> {\n  const {\n    __name,\n    __primaryKey,\n  } = object;\n\n  const relationship = {\n    __name,\n    __primaryKey,\n    __has,\n    __alias,\n  }\n\n  return relationship\n}\n\n/**\n * @param primaryKey Default is \"id\", otherwise specify what the primary key of the object is.\n */\nexport function createRelationalObject<\nN extends string\n>(\n  name: N,\n  primaryKey?: string,\n): ORS.RelationalCreator<N> {\n\n  const object = {\n    __name: name,\n    __primaryKey: primaryKey ?? \"id\",\n    __relationship: { },\n    __indexes: [],\n  }\n\n  Object.setPrototypeOf(object, {\n\n    hasOne(object: ORS.RelationalObject<N>, as?: string) {\n      const self = this as unknown as ORS.RelationalObject<N>;\n      const name: any = as ?? object.__name;\n\n      const existing = Object.entries(self.__relationship).find(([alias, has]) => has.__name === object.__name);\n      if (\n        existing &&\n        (\n          self.__relationship[existing[0]].__primaryKey === object.__primaryKey &&\n          object.__primaryKey === self.__name\n        )\n      ) throw new Error(`\"${object.__name}\" reference already exists in \"${self.__name}\" as \"${existing[0]}\" with the primary key (pk) \"${object.__primaryKey}\". \"${self.__name}\" table failed to create a hasOne relationship with \"${name}\" because it has the same primary key \"${object.__primaryKey}\" as \"${existing[0]}\". The primary key for \"${existing[0]}\" and \"${name}\" are not unique.`);\n\n      self.__relationship[name] = has(object, \"hasOne\", name);\n\n      return this;\n    },\n\n    hasMany(object: ORS.RelationalObject<N>, as?: string) {\n      const self = this as unknown as ORS.RelationalObject<N>;\n      const name: any = as ?? object.__name;\n\n      const existing = Object.entries(self.__relationship).find(([alias, has]) => has.__name === object.__name)\n      if (\n        existing &&\n        (\n          self.__relationship[existing[0]].__primaryKey === object.__primaryKey &&\n          object.__primaryKey === self.__name\n        )\n      ) throw new Error(`\"${object.__name}\" reference already exists in \"${self.__name}\" as \"${existing[0]}\" with the primary key (pk) \"${object.__primaryKey}\". \"${self.__name}\" table failed to create a hasOne relationship with \"${name}\" because it has the same primary key \"${object.__primaryKey}\" as \"${existing[0]}\". The primary key for \"${existing[0]}\" and \"${name}\" are not unique.`);\n\n      self.__relationship[name] = has(object, \"hasMany\", name);\n\n      return this;\n    },\n\n  });\n\n  return object as unknown as ORS.RelationalCreator<N>\n}\n","import { type ORS } from \"./types\";\n\n/**\n * Creates an object index. \n * For example, if you upsert an array of articles, and you created an index of articles to handle pagination,\n * When you upsert and mention the article index, the index will get updated.\n * In this array of objects, if you want to skip indexing for one particular object,\n * add the property \\_\\_skipIndex\\_\\_: true\n * This will make the indexer skip indexing for that object.\n */\nexport function createRelationalObjectIndex<\n  N extends string,\n  I extends string\n>(\n  name: I,\n  objects: ORS.RelationalCreator<N>[],\n  sort?: (a: any, b: any) => 1 | -1 | 0,\n) {\n\n  const object = {\n    __name: name,\n    __objects: objects.map(o => o.__name),\n    __sort: sort ?? null\n  }\n\n  return object as unknown as ORS.RelationalObjectIndex<I, ORS.RelationalCreator<N>[\"__name\"]>\n}","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","\n\nexport default function findMatch<\n  O extends Record<string, any>\n>(where: Partial<O>, object: Record<string, any>) {\n\n  // Iterate over all the fields in the where object\n  // If anything does not match with object, return false.\n  for (const [field, value] of Object.entries(where)) {\n    if (object[field] !== value) return false;\n  }\n\n  return true;\n}","import { type ORS } from \"../types\";\n\n\n/**\n * This method does not mutate the object,\n * It creates a copy and returns a new object with the selected fields\n * \n * @param fields Fields to select from the object\n * @param schema The object schema\n * @param object The object to select the fields from.\n * @returns A copy of the object\n */\nexport default function selectFields<\n  N extends string,\n  O extends Record<string, any>\n>(\n  fields: ORS.SelectOptions<N, O>[\"fields\"],\n  object: O\n) {\n\n  if (!object) return null;\n\n  const result: O = {} as O;\n\n  function mapOverFields(fields: (keyof O)[]) {\n    fields\n      .forEach((field) => {\n        const value = object[field];\n        if (!value) return;\n        result[field] = value;\n      })\n  }\n\n  /**\n   * If we are returning all fields, select everything and all relations,\n   * replace them with their primary key\n   */\n  if (fields === \"*\")\n    mapOverFields(Object.keys(object))\n  else\n    mapOverFields(fields as string[])\n\n  return result\n}","import { type ORS } from \"../types\";\nimport findMatch from \"./findMatch\";\nimport selectFields from \"./selectFields\";\n\n\nexport default function select<\n  N extends string,\n  O extends Record<string, any>\n>(\n  model: ORS.Model<N>,\n  state: ORS.State,\n  selectOptions: ORS.SelectOptions<N, O>\n): O | O[] | null {\n\n  const {\n    from,\n    where,\n    fields,\n    join\n  } = selectOptions;\n\n  // If where is an array, loop over it and select.\n  if (Array.isArray(where)) return where.flatMap(w => select(model, state, { ...selectOptions, where: w }) ?? [])\n\n\n  let result: O | O[] | null = null;\n\n  // @ts-ignore\n  const schema = model[from] as RelationalObject<N>;\n\n  const table = state[from];\n\n  if (!table) return null;\n\n  // If where is all objects\n  if (where === \"*\") {\n\n    // Result will be all objects.\n    result = Object\n      .values(table)\n      .flatMap(object => selectFields<string, O>(fields, object) ?? [])\n\n  }\n\n\n  // If where is an object\n  if (typeof where === \"object\") {\n\n    // Get the primary key\n    const primaryKey = where[schema.__primaryKey];\n\n    // If the primary key exists, return the related object.\n    if (primaryKey) {\n      const selected = selectFields(fields, table[primaryKey]);\n      if (selected) result = selected;\n    }\n\n\n    // If there is no primary key\n    if (!primaryKey) {\n\n      // Result will be an array of objects.\n      result = [];\n\n      // Iterate over all the objects in the table\n      // Test them against the where object\n      // If a match is found, select the fields and break the loop.\n      for (const [_, object] of Object.entries(table)) {\n        const match = findMatch(where, object)\n        if (match) {\n          const selected = selectFields(fields, object);\n          if (selected) result.push(selected);\n        }\n      }\n\n    }\n\n  }\n\n\n  // where is a function\n  if (typeof where === \"function\") {\n\n    // Result will be an array of objects.\n    result = [];\n\n    // Iterate over all the objects in the table\n    // Test them against the where function\n    // If a match is found, select the fields and break the loop.\n    for (const [_, object] of Object.entries(table)) {\n      const match = where(object)\n      if (match) {\n        const selected = selectFields(fields, object);\n        if (selected) result.push(selected);\n      }\n    }\n  }\n\n\n  // If there is a result and we need to join some fields\n  if (result && join) {\n\n    if (Array.isArray(result)) {\n      result\n        .forEach((object: any) => {\n          joinFields<N, O>(object, {\n            join,\n            from,\n            model,\n            state\n          })\n        })\n    }\n\n    if (!Array.isArray(result)) {\n      joinFields<N, O>(result, {\n        join,\n        from,\n        model,\n        state\n      })\n    }\n\n  }\n\n  return result as O | O[] | null;\n}\n\n\n\n/**\n * This function takes in result, which it will mutate.\n * After this, any fields mentioned in \"join\" will become the object instead of a primaryKey\n * \n * @param result The result object that will be mutated\n * @param options \n */\nfunction joinFields<\n  N extends string,\n  O extends Record<string, any>\n>(\n  result: O,\n  options: {\n    join: ORS.JoinOptions<keyof O>[];\n    from: string;\n    model: ORS.Model<N>;\n    state: ORS.State\n  }\n) {\n\n  const {\n    join,\n    from,\n    model,\n    state,\n  } = options;\n\n  // @ts-ignore\n  const schema = model[from] as RelationalObject<N>;\n\n\n  Object\n    .values(\n      join\n        .reduce((r, c) => { r[c.on as string] = c; return r }, {} as { [k: string]: ORS.JoinOptions<keyof O> })\n    )\n    .forEach(({ on, fields, join: innerJoin }) => {\n\n      if (!result[on]) return;\n\n      if (!schema.__relationship[on]) throw new Error(`Field \"${String(on)}\" does not exist in object \"${from}\"`);\n\n      if (schema.__relationship[on].__has === \"hasOne\") {\n        // Create the selector from the join statement.\n        result[on] = select(model, state, {\n          fields,\n          from: schema.__relationship[on].__name,\n          where: { [schema.__relationship[on].__primaryKey]: result[on] } as Partial<O>\n        }) as any\n      }\n\n      if (schema.__relationship[on].__has === \"hasMany\") {\n\n        const matches: any[] = [];\n\n        result[on]\n          .forEach((primaryKey: any) => {\n\n            // Create the selector from the join statement.\n            const match = select(model, state, {\n              fields,\n              from: schema.__relationship[on].__name,\n              where: { [schema.__relationship[on].__primaryKey]: primaryKey } as Partial<O>\n            })\n\n            if (match) matches.push(match);\n          })\n\n        result[on] = matches as any;\n      }\n\n      if (innerJoin) {\n\n        // Check the relationship of the parent, if it is a has one, proceed as normal\n        if (schema.__relationship[on].__has === \"hasOne\") {\n          joinFields(result[on], {\n            from: schema.__relationship[on].__name,\n            join: innerJoin,\n            model,\n            state\n          })\n        }\n\n        // If the relation is a hasMany, loop over each item and join.\n        if (schema.__relationship[on].__has === \"hasMany\") {\n          result[on]\n            .forEach((object: any) => {\n              joinFields(object, {\n                from: schema.__relationship[on].__name,\n                join: innerJoin,\n                model,\n                state\n              })\n            })\n        }\n      }\n\n    })\n}","export function deepCopy<T>(obj: T): T {\n  if (obj === null || typeof obj !== \"object\") return obj;\n\n  let newObj: any = Array.isArray(obj) ? [] : {};\n\n  for (let key in obj) if (obj.hasOwnProperty(key)) newObj[key] = deepCopy(obj[key]);\n\n  return newObj;\n}\n\nexport function deepEqual(obj1: any, obj2: any) {\n  if (obj1 === obj2) return true;\n\n  if (typeof obj1 !== 'object' || typeof obj2 !== 'object' || obj1 === null || obj2 === null) return false;\n\n  const keys1 = Object.keys(obj1);\n  const keys2 = Object.keys(obj2);\n\n  if (keys1.length !== keys2.length) return false;\n\n  for (const key of keys1) if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) return false;\n\n  return true;\n}\n\n\n// TODO if where is a function,\n// this caching fails.\n// Probably a key need to be passed from the outside\nexport function memo<T extends (...args: any[]) => any>(func: T): T {\n  const cache = new Map<string, ReturnType<T>>();\n\n  return function (...args: Parameters<T>): ReturnType<T> {\n    const key = JSON.stringify(args);\n    const result = func(...args);\n    const cachedResult = cache.get(key);\n    if (cache.has(key) && deepEqual(cachedResult, result)) return cachedResult as ReturnType<T>;\n    cache.set(key, result);\n    return result;\n  } as T;\n}\n","import { type ORS } from \"./types\";\nimport querySelect from \"./query/select\";\nimport { deepCopy, memo } from \"./utils\";\n\nexport function createStore<\n  N extends string,\n  I extends string,\n  O extends string,\n>(config: ORS.CreateStoreConfig<N, I, O>) {\n\n  const {\n    relationalCreators,\n    indexes,\n    identifier,\n    initialStore,\n  } = config;\n\n\n  const references: ORS.ReferenceStore = {\n    current: initialStore?.references ?? {},\n    upsert(this, val) {\n      if (!this.current[val.name]) this.current[val.name] = {}\n      if (!this.current[val.name][val.primaryKey]) {\n        this.current[val.name][val.primaryKey] = [val.ref];\n        return;\n      }\n      if (this.current[val.name][val.primaryKey].includes(val.ref)) return;\n      this.current[val.name][val.primaryKey].push(val.ref)\n    }\n  };\n\n  const state = initialStore?.state ?? {} as ORS.State;\n\n\n  const listeners = new Set<() => void>();\n\n\n  const model = relationalCreators\n    .reduce((r, t) => {\n      const { hasOne, hasMany, ...next } = t\n      return { ...r, [next.__name]: next }\n    }, {} as ORS.Model<N>)\n\n\n  // @ts-ignore\n  indexes?.forEach(index => model[index.__name] = index)\n\n\n  function subscribe(listener: () => void) {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  }\n\n\n  /**\n   * Identifies the object by testing it against the indetifier functions.\n   * Optionally, you can also add the key \\_\\_identify\\_\\_ with the value as the name of the object and it will use that as\n   * an alternative to the identifier\n   * @param item The object we want to indentify\n   * @returns The name of the object\n   */\n  function identify(item: any): string {\n    if (\"__identify__\" in item) {\n      const name = item.__identify__;\n      delete item.__identify__;\n      return name;\n    }\n    delete item.__identify__;\n    for (const key in identifier) {\n      if (!Object.prototype.hasOwnProperty.call(identifier, key)) continue;\n      const validator = identifier[key];\n      if (validator(item)) return key;\n    }\n    throw new Error(`Identifier was not able to identify this object ${JSON.stringify(item)}`);\n  }\n\n\n  function upsert(object: ORS.StoreObject<N, I> | ORS.StoreObject<N, I>[]) {\n\n    const items = deepCopy(Array.isArray(object) ? object : [object]);\n\n    // The key __indexes__ will be deleted after it's used so we need to \n    // get all the indexes before any operations\n    const indexes =\n      items\n        .reduce((acc, cur) => {\n          if (cur.__indexes__) {\n\n            const uids = cur.__indexes__.map((i) => i.split(\"-\") as [string, string]);\n            acc.push(...uids);\n          }\n          return acc;\n        }, [] as [string, string][])\n\n\n    function destroyOrphans(params: {\n      item: ORS.StoreObject<N, I>;\n      name: string;\n      primaryKey: string;\n    }) {\n      const {\n        item,\n        name,\n        primaryKey,\n      } = params;\n\n\n      // @ts-ignore\n      const itemSchema: ORS.RelationalObject<N> = model[name];\n\n      /**\n       * For each related field in this object, check if the objects related fields and remove orphan children.\n       */\n      Object\n        .entries(itemSchema.__relationship)\n        .forEach(([field, relationship]) => {\n          if (!state[name][item[primaryKey]]) return;\n\n          const itemPrimaryKey = state[name][item[primaryKey]][field];\n\n          // If there is no primary key, skip\n          if (!itemPrimaryKey) return;\n\n          // This field in the object is a \"hasMany\", loop over itemPrimaryKey, it is an array of primary keys.\n          if (relationship.__has === \"hasMany\") {\n            itemPrimaryKey\n              .forEach((pk: any) => {\n                const refs = references.current[relationship.__name][pk];\n\n                // For each pk, check if all are self refs\n                const allSelfRef = refs.every(ref => {\n                  const [refName, refPrimaryKey] = ref.split(\".\")\n                  return refName === name && refPrimaryKey === String(item[primaryKey])\n                })\n\n                if (!allSelfRef) return;\n\n                // If we are going to destroy this related object, check it for orphaned children and remove them too.\n                // recursively\n\n                destroyOrphans({\n                  item: { [relationship.__primaryKey]: pk },\n                  name: relationship.__name,\n                  primaryKey: relationship.__primaryKey\n                })\n\n                // Finally,\n                // If all references are to the item we are deleting, remove all refs and delete the object too\n                delete references.current[relationship.__name][pk];\n                delete state[relationship.__name][pk];\n              });\n\n            return;\n          }\n\n          const refs = references.current[relationship.__name][itemPrimaryKey];\n\n          // If we have references\n          if (refs) {\n\n            // Check if all are self refs\n            const allSelfRef = refs.every(ref => {\n              const [refName, refPrimaryKey] = ref.split(\".\")\n              return refName === name && refPrimaryKey === String(item[primaryKey])\n            })\n\n            if (!allSelfRef) return;\n\n\n            // If we are going to destroy this related object, check it for orphaned children and remove them too.\n            // recursively\n            destroyOrphans({\n              item: { [relationship.__primaryKey]: itemPrimaryKey },\n              name: relationship.__name,\n              primaryKey: relationship.__primaryKey\n            })\n\n            // If all references are to the item we are deleting, remove all refs and delete the object too\n            delete references.current[relationship.__name][itemPrimaryKey];\n            delete state[relationship.__name][itemPrimaryKey];\n          }\n        })\n\n      // Lastly, delete the object\n      // We have already destroyed all orphans.\n      delete state[name][item[primaryKey]];\n\n      // Delete the item from any index it is referenced in.\n      itemSchema\n        .__indexes\n        .forEach(indexName => {\n          const index = (state[indexName] as ORS.Index);\n          const key = `${name}-${item[primaryKey]}`;\n          const i = index.index.indexOf(key);\n          if (i !== -1) {\n            delete index.objects[`${name}-${item[primaryKey]}`];\n            index.index.splice(i, 1);\n          }\n        })\n    }\n\n\n    function destroyReferences(params: {\n      item: ORS.StoreObject<N, I>;\n      name: string;\n      primaryKey: string;\n    }) {\n\n      const {\n        item,\n        name,\n        primaryKey,\n      } = params;\n\n      if (!state[name]) return;\n\n      /**\n       * If there are no references, destroy the object and orphans\n       */\n      if (!references.current[name]) {\n        destroyOrphans({ item, name, primaryKey });\n        return;\n      }\n\n      const itemPrimaryKey = item[primaryKey];\n      const refs = references.current[name][itemPrimaryKey];\n\n      if (refs) {\n        refs\n          .forEach(ref => {\n\n            //  [\"user\", \"10\", \"images\"] = ref.split(\".\")\n            const [refName, refPrimaryKey, refField] = ref.split(\".\")\n\n            // If this object was destroyed earlier,\n            // can happen when deleting multiple items at once\n            if (!state[refName][refPrimaryKey]) return;\n\n            // @ts-ignore\n            const refRelation: ORS.RelationalObject<N> = model[refName];\n\n            const hasMany = refRelation.__relationship[refField].__has === \"hasMany\";\n\n            // If this field is not a has many, delete it.\n            if (!hasMany) {\n              delete state[refName][refPrimaryKey][refField];\n              return;\n            }\n\n            const index = state[refName][refPrimaryKey][refField].indexOf(itemPrimaryKey);\n            if (index !== - 1) {\n              if (state[refName][refPrimaryKey][refField].length === 1) {\n                delete state[refName][refPrimaryKey][refField];\n                return;\n              }\n              state[refName][refPrimaryKey][refField].splice(index, 1);\n            }\n          })\n\n        delete references.current[name][itemPrimaryKey];\n      }\n\n      /**\n       * If there were references, after removing them, destroy the object and all orphans\n       */\n      destroyOrphans({ item, name, primaryKey });\n    }\n\n\n    /**\n     *  If this object is related with the parent, then set the relationship\n     *  E.g. the parent is a post, the current object is a user\n     *  A post contains a user, so here we are.\n     *  However, a user also contains posts.\n     *  Here we add this post to the user appropriately, according to the\n     *  relationship defined in user.\n     */\n    function handleChildRelationshipWithParent(params: {\n      name: string;\n      item: ORS.StoreObject<N, I>;\n      parentName: string;\n      primaryKey: string;\n      parentPrimaryKey: string;\n      relationalObject: ORS.RelationalObject;\n    }) {\n\n      const {\n        name,\n        item,\n        parentName,\n        primaryKey,\n        parentPrimaryKey,\n        relationalObject\n      } = params;\n\n      // Check if I have a relationship with my parent\n      const relationWithParent = Object.values(relationalObject.__relationship).find(has => has.__name === parentName);\n\n      if (relationWithParent) {\n\n        if (relationWithParent.__has === \"hasOne\") {\n          references.upsert({ name: relationWithParent.__name, primaryKey: parentPrimaryKey, ref: `${name}.${item[primaryKey]}.${relationWithParent.__alias}` });\n          state[name][item[primaryKey]][relationWithParent.__alias] = parentPrimaryKey;\n        }\n\n        if (relationWithParent.__has === \"hasMany\") {\n          const existingItems = state[name][item[primaryKey]][relationWithParent.__alias];\n          const isAnArray = Array.isArray(existingItems);\n\n          // If the existing items is not an array, it's new, assign it to a\n          // new array containg the current item.\n          if (!isAnArray) {\n            references.upsert({ name: relationWithParent.__name, primaryKey: parentPrimaryKey, ref: `${name}.${item[primaryKey]}.${relationWithParent.__alias}` });\n            state[name][item[primaryKey]][relationWithParent.__alias] = [parentPrimaryKey];\n            return;\n          }\n\n          // The existing items is an array\n          // Check if the current item exists. If it does not, add it.\n          const exists = !!existingItems.find((id: any) => id === parentPrimaryKey);\n          if (!exists) {\n            references.upsert({ name: relationWithParent.__name, primaryKey: parentPrimaryKey, ref: `${name}.${item[primaryKey]}.${relationWithParent.__alias}` });\n            existingItems.push(parentPrimaryKey);\n          }\n        }\n      }\n\n    }\n\n\n    /**\n     * Upserts a single item. Calls itself recursively based on object relationship.\n     */\n    function upsertOne(params: {\n      item: ORS.StoreObject<N, I>;\n      parentName?: string;\n      parentField?: string;\n      parentPrimaryKey?: string;\n      parentFieldHasMany?: boolean;\n    }) {\n\n      const {\n        item,\n        parentName,\n        parentField,\n        parentFieldHasMany,\n        parentPrimaryKey,\n      } = params;\n\n      const name = identify(item);\n\n      // @ts-ignore\n      const relationalObject: ORS.RelationalObject<N> = model[name];\n\n      const primaryKey = relationalObject.__primaryKey;\n\n\n      // If the primary key does not exist on the object, we can't go forward.\n      if (!item[primaryKey]) throw new Error(`Expected object \"${name}\" to have a primaryKey \"${primaryKey}\".`);\n\n      if (\"__destroy__\" in item) {\n        // If we are destroying this item and all references, call destroyReferences and return\n        if (item.__destroy__) return destroyReferences({ item, name, primaryKey });\n        delete item.__destroy__;\n      }\n\n      // If this table does not exist, initialize it.\n      if (!state[name]) state[name] = {};\n\n      // If the record does not exist, create an empty obj\n      if (!state[name][item[primaryKey]]) state[name][item[primaryKey]] = {};\n\n\n      // Do not update indexes if we are inside an object,\n      // If we receive posts[], update indexes, if post has a user, we traverse inside, do not update indexes for user or any children of post.\n      if (!parentName) {\n\n        // If this item is indexed, add it to the index. The index is a set.\n        if (\"__indexes__\" in item) {\n          item\n            .__indexes__\n            ?.forEach((indexKey) => {\n\n              const [indexName] = indexKey.split(\"-\")\n\n              // @ts-ignore\n              const indexModel = model[indexName] as ORS.RelationalObjectIndex<I, O>\n\n              // If this object does not have an index, skip it.\n              if (!indexModel?.__objects.includes(name as O)) return;\n\n              // If the model's index does not include this, add it.\n              if (!relationalObject.__indexes.includes(indexKey)) relationalObject.__indexes.push(indexKey)\n\n              // If it's not defined in state, initialize it.\n              if (!state[indexKey]) (state[indexKey] as ORS.Index) = { index: [], objects: {} };\n\n              // If the key already exists in the index, skip it.\n              const objKey = `${name}-${item[primaryKey]}`;\n              if (!!(state[indexKey] as ORS.Index).objects[objKey]) return;\n\n              (state[indexKey] as ORS.Index).index.push(objKey);\n              (state[indexKey] as ORS.Index).objects[objKey] = { name, primaryKey, primaryKeyValue: item[primaryKey] };\n            })\n\n          delete item.__indexes__;\n        }\n      }\n\n\n      /**\n       * Traverse inside the object and add all related fields to state.\n       */\n      Object\n        .entries(item)\n        .forEach(([field, value]: any) => {\n\n          // If this field is a related field, traverse in recursively\n          if (!!relationalObject.__relationship[field]) {\n\n            const hasMany = relationalObject.__relationship[field].__has === \"hasMany\";\n\n            if (!item[field]) return;\n\n            if (!hasMany) {\n              upsertOne({\n                item: item[field],\n                parentPrimaryKey: item[primaryKey],\n                parentField: field,\n                parentName: name,\n              })\n              return;\n            }\n\n            item[field].forEach((oneItem: any) => {\n              upsertOne({\n                item: oneItem,\n                parentPrimaryKey: item[primaryKey],\n                parentField: field,\n                parentName: name,\n                parentFieldHasMany: true,\n              })\n            })\n            return;\n          }\n\n          state[name][item[primaryKey]][field] = value;\n        })\n\n\n      /**\n       * If this object is a child of someone, create a reference by primaryKey in the parent\n       */\n      if (parentName && parentField && parentPrimaryKey) {\n\n        if (parentFieldHasMany) {\n          const existingItems = state[parentName][parentPrimaryKey][parentField];\n\n          // If the existing items is not an array, it's new, assign it to a\n          // new array containg the current item.\n          if (!Array.isArray(existingItems)) {\n            references.upsert({ name, primaryKey: item[primaryKey], ref: `${parentName}.${parentPrimaryKey}.${parentField}` });\n            state[parentName][parentPrimaryKey][parentField] = [item[primaryKey]];\n            handleChildRelationshipWithParent({\n              name,\n              item,\n              parentName,\n              parentPrimaryKey,\n              primaryKey,\n              relationalObject\n            })\n            return;\n          }\n\n          // The existing items is an array\n          // Check if the current item exists. If it does not, add it.\n          const exists = !!existingItems.find((id: any) => id === item[primaryKey]);\n          if (!exists) {\n            references.upsert({ name, primaryKey: item[primaryKey], ref: `${parentName}.${parentPrimaryKey}.${parentField}` });\n            existingItems.push(item[primaryKey])\n            handleChildRelationshipWithParent({\n              name,\n              item,\n              parentName,\n              parentPrimaryKey,\n              primaryKey,\n              relationalObject\n            })\n          }\n          return;\n        }\n\n\n        references.upsert({ name, primaryKey: item[primaryKey], ref: `${parentName}.${parentPrimaryKey}.${parentField}` });\n\n        // The child has been created\n        // set the parent field to the reference of this object\n        state[parentName][parentPrimaryKey][parentField] = item[primaryKey];\n\n        handleChildRelationshipWithParent({\n          name,\n          item,\n          parentName,\n          parentPrimaryKey,\n          primaryKey,\n          relationalObject\n        })\n      }\n\n    }\n\n\n    items.forEach(item => !!item && upsertOne({ item }))\n\n\n    indexes\n      ?.forEach(([indexName, indexUid]) => {\n        // @ts-ignore\n        const sort = (model[indexName] as ORS.RelationalObjectIndex<I, O>).__sort;\n        const indexKey = `${indexName}-${indexUid}`;\n        if (!sort || !state[indexKey]) return;\n        (state[indexKey] as ORS.Index)\n          .index\n          .sort((a, b) => {\n            const itemA = (state[indexKey] as ORS.Index).objects[a]\n            const itemB = (state[indexKey] as ORS.Index).objects[b]\n            return sort(state[itemA.name][itemA.primaryKeyValue], state[itemB.name][itemB.primaryKeyValue])\n          })\n      })\n\n\n    listeners.forEach(listener => listener());\n  }\n\n\n  const select = memo(<\n    N extends string,\n    O extends Record<string, any>\n  >(options: ORS.SelectOptions<N, O>): O | O[] | null => {\n    return querySelect<N, O>(model, state, options);\n  })\n\n\n  /**\n   * @param index The name of the index you want to select from\n   * @param options The key is the name of the object, value is SelectOptions\n   */\n  const selectIndex = memo(<\n    E extends I,\n    N extends string,\n    O extends Record<string, any>\n  >(index: `${E}-${string}`, options?: Record<string, ORS.Replace<ORS.SelectOptions<N, O>, \"where\", ((object: any) => boolean)>>) => {\n    const indexes = state[index] as ORS.Index;\n    const result: O[] = [];\n    if (!indexes) return null;\n    indexes\n      .index\n      .forEach((key: string) => {\n        const recordIndex = indexes.objects[key];\n        const queryOptions = options ? options[recordIndex.name] : { from: recordIndex.name, fields: \"*\" } as ORS.Replace<ORS.SelectOptions<N, O>, \"where\", ((object: any) => boolean)>;\n\n        if (!queryOptions) throw new Error(`selectIndex() expected SelectOptions for \"${recordIndex.name}\" in the index \"${index}\".`);\n\n        const object = querySelect(model, state, { ...queryOptions, where: { [recordIndex.primaryKey]: recordIndex.primaryKeyValue } } as ORS.SelectOptions<any, any>);\n        if (!object) return;\n        if (!queryOptions?.where) return result.push(object);\n        if (typeof queryOptions?.where === \"function\" && !queryOptions?.where(object)) return;\n        result.push(object);\n      });\n    return result\n  })\n\n\n  function getState() { return state; }\n\n  function getReferences() { return references.current; }\n\n  function purge() {\n    for (const key in state) {\n      if (!Object.prototype.hasOwnProperty.call(state, key)) return;\n      delete state[key];\n    };\n    references.current = {};\n  }\n\n  function destroy(name: N | `${I}-${string}`) {\n    delete state[name];\n  }\n\n  function save(callback: (store: ORS.RestoreStore) => void) {\n    callback({ state, references: references.current })\n  }\n\n\n  function restore(store: ORS.RestoreStore) {\n    references.current = store.references;\n    Object\n      .entries(store.state)\n      .map(([key, value]) => state[key] = value)\n  }\n\n  return {\n    save,\n    restore,\n    getState,\n    getReferences,\n    purge,\n    select,\n    selectIndex,\n    upsert,\n    subscribe,\n    destroy\n  }\n}","import { ORS } from \"../types\";\n\nexport default function withOptions<\n  N extends string,\n  I extends string,\n>(\n  object: ORS.StoreObject<N, I>,\n  options: { [K in keyof ORS.StoreObject<N, I>]?: ORS.StoreObject<N, I>[K] | ((object: ORS.StoreObject<N, I>) => ORS.StoreObject<N, I>[K]) }\n) {\n\n  if (Array.isArray(object)) return object.map(o => oneWithOptions(o, options))\n\n  return oneWithOptions(object, options);\n}\n\n\nfunction oneWithOptions<\n  N extends string,\n  I extends string,\n>(\n  object: ORS.StoreObject<N, I>,\n  options: { [K in keyof ORS.StoreObject<N, I>]?: ORS.StoreObject<N, I>[K] | ((object: ORS.StoreObject<N, I>) => ORS.StoreObject<N, I>[K]) }\n) {\n\n  if (typeof options.__destroy__ === \"function\")\n    object[\"__destroy__\"] = options.__destroy__(object);\n  else\n    if (options.__destroy__) object[\"__destroy__\"] = options.__destroy__;\n\n  if (typeof options.__identify__ === \"function\")\n    object[\"__identify__\"] = options.__identify__(object);\n  else\n    if (options.__identify__) object[\"__identify__\"] = options.__identify__;\n\n  if (typeof options.__indexes__ === \"function\")\n    object[\"__indexes__\"] = options.__indexes__(object);\n  else\n    if (options.__indexes__) object[\"__indexes__\"] = options.__indexes__;\n\n  return object\n}"],"names":["has","object","__has","__alias","__name","__primaryKey","createRelationalObject","name","primaryKey","__relationship","__indexes","Object","setPrototypeOf","hasOne","as","self","this","existing","entries","find","_a","Error","concat","hasMany","createRelationalObjectIndex","objects","sort","__objects","map","o","__sort","__assign","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","findMatch","where","_i","_b","field","value","selectFields","fields","result","mapOverFields","forEach","keys","select","model","state","selectOptions","from","join","Array","isArray","flatMap","w","schema","table","values","selected","push","_c","_d","_e","joinFields","options","reduce","r","c","on","innerJoin","String","matches_1","match","deepCopy","obj","newObj","key","deepEqual","obj1","obj2","keys1","keys2","keys1_1","includes","memo","func","cache","Map","args","JSON","stringify","cachedResult","get","set","createStore","config","relationalCreators","indexes","identifier","initialStore","references","current","upsert","val","ref","listeners","Set","next","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","index","querySelect","selectIndex","recordIndex","queryOptions","primaryKeyValue","save","callback","restore","store","getState","getReferences","purge","items","acc","cur","__indexes__","uids","split","destroyOrphans","params","item","itemSchema","relationship","itemPrimaryKey","refs","allSelfRef","every","refName","refPrimaryKey","pk","indexName","splice","handleChildRelationshipWithParent","parentName","parentPrimaryKey","relationalObject","relationWithParent","existingItems","id","upsertOne","parentField","parentFieldHasMany","name_1","__identify__","validator","identify","__destroy__","refField","destroyReferences","indexKey","indexModel","objKey","oneItem","indexUid","a","b","itemA","itemB","listener","subscribe","add","delete","destroy","withOptions","oneWithOptions","SuppressedError"],"mappings":"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","x_google_ignoreList":[2]}