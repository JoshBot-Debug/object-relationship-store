"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6466],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,h=d["".concat(l,".").concat(m)]||d[m]||c[m]||i;return n?a.createElement(h,o(o({ref:t},u),{},{components:n})):a.createElement(h,o({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2609:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:3},o="Create data",s={unversionedId:"walkthrough/create-data",id:"walkthrough/create-data",title:"Create data",description:"Create an object in the store",source:"@site/docs/walkthrough/create-data.md",sourceDirName:"walkthrough",slug:"/walkthrough/create-data",permalink:"/object-relationship-store/docs/walkthrough/create-data",draft:!1,editUrl:"https://github.com/JoshBot-Debug/object-relationship-store/tree/main/documentation/docs/walkthrough/create-data.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Create a store",permalink:"/object-relationship-store/docs/walkthrough/create-a-store"},next:{title:"Read data",permalink:"/object-relationship-store/docs/walkthrough/read-data"}},l={},p=[{value:"Create one object",id:"create-one-object",level:2},{value:"Using <code>store.mutate()</code>",id:"using-storemutate",level:3},{value:"Using <code>store.mutate()</code> with <code>__identify__</code>",id:"using-storemutate-with-__identify__",level:3},{value:"Using <code>store.mutate()</code> with <code>withOptions()</code>",id:"using-storemutate-with-withoptions",level:3},{value:"Set many objects",id:"set-many-objects",level:2}],u={toc:p},d="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"create-data"},"Create data"),(0,r.kt)("p",null,"Create an object in the store"),(0,r.kt)("h2",{id:"create-one-object"},"Create one object"),(0,r.kt)("p",null,"There are ",(0,r.kt)("strong",{parentName:"p"},"3 different")," ways data can be set in the store. This applies to creating, updating and deleting data."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Using ",(0,r.kt)("a",{parentName:"li",href:"../api/store.mutate"},(0,r.kt)("inlineCode",{parentName:"a"},"store.mutate()"))),(0,r.kt)("li",{parentName:"ul"},"Using ",(0,r.kt)("a",{parentName:"li",href:"../api/store.mutate"},(0,r.kt)("inlineCode",{parentName:"a"},"store.mutate()"))," with ",(0,r.kt)("a",{parentName:"li",href:"../api/store.mutate#__identify__"},(0,r.kt)("inlineCode",{parentName:"a"},"__identify__"))),(0,r.kt)("li",{parentName:"ul"},"Using ",(0,r.kt)("a",{parentName:"li",href:"../api/store.mutate"},(0,r.kt)("inlineCode",{parentName:"a"},"store.mutate()"))," with ",(0,r.kt)("a",{parentName:"li",href:"../api/withOptions"},(0,r.kt)("inlineCode",{parentName:"a"},"withOptions()"))," ")),(0,r.kt)("h3",{id:"using-storemutate"},"Using ",(0,r.kt)("a",{parentName:"h3",href:"../api/store.mutate"},(0,r.kt)("inlineCode",{parentName:"a"},"store.mutate()"))),(0,r.kt)("p",null,"Here we will add a new user object into the store."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="example-project/index.js"',title:'"example-project/index.js"'},'\nconst userObject = {\n  id: 1,\n  username: "the_overlord",\n}\n\nstore.mutate(userObject);\n\nconsole.log(store.getState())\n')),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"node index.js")," and you should see this in the terminal."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"{ user: { '1': { id: 1, username: 'the_overlord' } } }\n")),(0,r.kt)("h3",{id:"using-storemutate-with-__identify__"},"Using ",(0,r.kt)("a",{parentName:"h3",href:"../api/store.mutate"},(0,r.kt)("inlineCode",{parentName:"a"},"store.mutate()"))," with ",(0,r.kt)("a",{parentName:"h3",href:"../api/store.mutate#__identify__"},(0,r.kt)("inlineCode",{parentName:"a"},"__identify__"))),(0,r.kt)("p",null,"When we created our store, in the identifier, we used the field ",(0,r.kt)("inlineCode",{parentName:"p"},"username"),"\nto identify an object as a ",(0,r.kt)("inlineCode",{parentName:"p"},"User")," object.",(0,r.kt)("br",{parentName:"p"}),"\n","Here we upsert a user object without the field ",(0,r.kt)("inlineCode",{parentName:"p"},"username")," and instead passed ",(0,r.kt)("a",{parentName:"p",href:"../api/store.mutate#__identify__"},(0,r.kt)("inlineCode",{parentName:"a"},"__identify__"))," to tell\nthe store what type of object we are dealing with."),(0,r.kt)("p",null,"Check the value of ",(0,r.kt)("inlineCode",{parentName:"p"},"user")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"identifier")," in ",(0,r.kt)("a",{parentName:"p",href:"./create-a-store#create-the-store"},(0,r.kt)("inlineCode",{parentName:"a"},"the store we created"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="example-project/index.js"',title:'"example-project/index.js"'},'\n// username is not in this object\nconst userObject = {\n  id: 1,\n}\n\n// Without specifying __identify__, this would fail\nstore.mutate({...userObject, __identify__: "user"});\n\nconsole.log(store.getState())\n')),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"node index.js")," and you should see this in the terminal."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"{ user: { '1': { id: 1 } } }\n")),(0,r.kt)("h3",{id:"using-storemutate-with-withoptions"},"Using ",(0,r.kt)("a",{parentName:"h3",href:"../api/store.mutate"},(0,r.kt)("inlineCode",{parentName:"a"},"store.mutate()"))," with ",(0,r.kt)("a",{parentName:"h3",href:"../api/withOptions"},(0,r.kt)("inlineCode",{parentName:"a"},"withOptions()"))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"../api/withOptions"},(0,r.kt)("inlineCode",{parentName:"a"},"withOptions()"))," is a helper function used to set values like ",(0,r.kt)("a",{parentName:"p",href:"../api/store.mutate#__identify__"},(0,r.kt)("inlineCode",{parentName:"a"},"__identify__")),"\non an object(s). We will cover all the rest later."),(0,r.kt)("p",null,"This helper function may prove to be useful sooner or later."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="example-project/index.js"',title:'"example-project/index.js"'},'import { withOptions } from "@jjmyers/object-relationship-store";\n\n// username is not in this object\nconst userObject = {\n  id: 1,\n}\n\n// Without specifying __identify__, this would fail\nstore.mutate(withOptions(userObject, { __identify__: "user" }));\n\nconsole.log(store.getState())\n')),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"node index.js")," and you should see this in the terminal."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"{ user: { '1': { id: 1 } } }\n")),(0,r.kt)("h2",{id:"set-many-objects"},"Set many objects"),(0,r.kt)("p",null,"To set many object, just pass an array of objects instead of a single object!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="example-project/index.js"',title:'"example-project/index.js"'},'import { withOptions } from "@jjmyers/object-relationship-store";\n\nconst userObjects = [\n  { id: 1, username: "the_overlord" },\n  { id: 2, username: "qwerty" }\n]\n\n// All three methods of upserting data work\nstore.mutate(withOptions(userObjects, { __identify__: "user" }));\nstore.mutate(userObjects);\n\nconsole.log(store.getState())\n')),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"node index.js")," and you should see this in the terminal."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"{\n  user: {\n    '1': { id: 1, username: 'the_overlord' },\n    '2': { id: 2, username: 'qwerty' }\n  }\n}\n")))}c.isMDXComponent=!0}}]);