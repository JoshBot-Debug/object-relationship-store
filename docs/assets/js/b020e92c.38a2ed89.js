"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[304],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=o,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||a;return n?r.createElement(h,i(i({ref:t},d),{},{components:n})):r.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5562:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:4},i="store.selectIndex()",l={unversionedId:"api/store.selectIndex",id:"api/store.selectIndex",title:"store.selectIndex()",description:"Used to select data from an object index in the store",source:"@site/docs/api/store.selectIndex.md",sourceDirName:"api",slug:"/api/store.selectIndex",permalink:"/object-relationship-store/docs/api/store.selectIndex",draft:!1,editUrl:"https://github.com/JoshBot-Debug/object-relationship-store/tree/main/documentation/docs/api/store.selectIndex.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"store.select()",permalink:"/object-relationship-store/docs/api/store.select"},next:{title:"withOptions()",permalink:"/object-relationship-store/docs/api/withOptions"}},s={},p=[{value:"Properties",id:"properties",level:2},{value:"<code>name</code>",id:"name",level:3},{value:"<code>options</code>",id:"options",level:3},{value:"API",id:"api",level:2},{value:"Properties",id:"properties-1",level:3},{value:"Return value",id:"return-value",level:3}],d={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"storeselectindex"},"store.selectIndex()"),(0,o.kt)("p",null,"Used to select data from an object ",(0,o.kt)("inlineCode",{parentName:"p"},"index")," in the store"),(0,o.kt)("h2",{id:"properties"},"Properties"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"store.selectIndex(name, options)")),(0,o.kt)("h3",{id:"name"},(0,o.kt)("inlineCode",{parentName:"h3"},"name")),(0,o.kt)("p",null,"The name of the ",(0,o.kt)("inlineCode",{parentName:"p"},"index")," we want to select from. The structure of the name is important."),(0,o.kt)("p",null,"Lets say we name the ",(0,o.kt)("inlineCode",{parentName:"p"},"index")," ",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"em"},"comments")),", when we select we need to pass the ",(0,o.kt)("strong",{parentName:"p"},"[name]","-","[uniqueId]"),".\nSo to select from the ",(0,o.kt)("inlineCode",{parentName:"p"},"comments")," index, generally I'd imagine you would use ",(0,o.kt)("inlineCode",{parentName:"p"},"postId")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"articleId")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"blogId")," as the ",(0,o.kt)("inlineCode",{parentName:"p"},"uniqueId")," for the index.\nThis way for each ",(0,o.kt)("inlineCode",{parentName:"p"},"post"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"article")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"blog"),", the ",(0,o.kt)("inlineCode",{parentName:"p"},"comments")," index will be maintained seperately."),(0,o.kt)("p",null,"So we would select like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"                //  index  - uniqueId\nstore.selectIndex(`comments-${postId}`)\n")),(0,o.kt)("h3",{id:"options"},(0,o.kt)("a",{parentName:"h3",href:"./store.select#properties"},(0,o.kt)("inlineCode",{parentName:"a"},"options"))),(0,o.kt)("p",null,"This property is the same as the arguments properties by ",(0,o.kt)("a",{parentName:"p",href:"./store.select#properties"},(0,o.kt)("inlineCode",{parentName:"a"},"store.select()"))," "),(0,o.kt)("p",null,"The only difference here is that we can pass multiple ",(0,o.kt)("inlineCode",{parentName:"p"},"selectors"),", one for each object in the ",(0,o.kt)("inlineCode",{parentName:"p"},"index"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'/**\n * Here we assume that on the Home Feed, we receive a mix of posts, articles and blogs.\n * This index was created to manage the order of those object.\n */\nconst homeFeed = createRelationalObjectIndex("homeFeed", [post, article, blog])\n\nconst store = createStore({\n  // ...storeOptions\n  indexes: [\n    homeFeed\n  ],\n});\n\n// Here we select data from the index, optionally, we can pass a different selector for each type of object.\nstore.selectIndex("homeFeed-main", {\n  post: {\n    from: "post",\n    fields: "*"\n  },\n  article: {\n    from: "article",\n    fields: "*"\n  },\n  blog: {\n    from: "blog",\n    fields: "*"\n  }\n})\n')),(0,o.kt)("h2",{id:"api"},"API"),(0,o.kt)("h3",{id:"properties-1"},"Properties"),(0,o.kt)("table",null,(0,o.kt)("thead",null,(0,o.kt)("tr",null,(0,o.kt)("th",{width:"10%"},"Property"),(0,o.kt)("th",{width:"10%"},"Type"),(0,o.kt)("th",{width:"10%"},"Default"),(0,o.kt)("th",{width:"40%"},"Description"))),(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"name")),(0,o.kt)("td",null,(0,o.kt)("code",null,"string")),(0,o.kt)("td",null,(0,o.kt)("code",null,"undefined")),(0,o.kt)("td",null,"The name of a the index.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"options")),(0,o.kt)("td",null,(0,o.kt)("code",null,"Record<string, selector>")),(0,o.kt)("td",null,(0,o.kt)("code",null,"undefined")),(0,o.kt)("td",null,"Used to select data from the respective object type.")))),(0,o.kt)("h3",{id:"return-value"},"Return value"),(0,o.kt)("p",null,"Same return value as ",(0,o.kt)("a",{parentName:"p",href:"./store.select#return-value"},(0,o.kt)("inlineCode",{parentName:"a"},"store.select()"))))}u.isMDXComponent=!0}}]);