"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7469],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=a,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||o;return n?r.createElement(h,i(i({ref:t},d),{},{components:n})):r.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1511:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:6},i="Delete data",l={unversionedId:"walkthrough/delete-data",id:"walkthrough/delete-data",title:"Delete data",description:"Delete an object from the store",source:"@site/docs/walkthrough/delete-data.md",sourceDirName:"walkthrough",slug:"/walkthrough/delete-data",permalink:"/object-relationship-store/docs/walkthrough/delete-data",draft:!1,editUrl:"https://github.com/JoshBot-Debug/object-relationship-store/tree/main/documentation/docs/walkthrough/delete-data.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"docsSidebar",previous:{title:"Update data",permalink:"/object-relationship-store/docs/walkthrough/update-data"},next:{title:"Pagination",permalink:"/object-relationship-store/docs/walkthrough/pagination"}},s={},p=[{value:"Delete one object",id:"delete-one-object",level:2},{value:"Delete many objects",id:"delete-many-objects",level:2}],d={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"delete-data"},"Delete data"),(0,a.kt)("p",null,"Delete an object from the store"),(0,a.kt)("h2",{id:"delete-one-object"},"Delete one object"),(0,a.kt)("p",null,"When deleting an object from the store, 2 rules apply."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"All other ",(0,a.kt)("strong",{parentName:"li"},"references")," to the ",(0,a.kt)("strong",{parentName:"li"},"deleted object")," will be cleaned up."),(0,a.kt)("li",{parentName:"ul"},"All ",(0,a.kt)("strong",{parentName:"li"},"orphaned children")," will be deleted.")),(0,a.kt)("p",null,"If you do not want this behaviour, you will have to do a ",(0,a.kt)("strong",{parentName:"p"},"soft delete"),". If you don't know what a ",(0,a.kt)("strong",{parentName:"p"},"soft delete")," is, ask ChatGPT!"),(0,a.kt)("p",null,"Once again, we will be using ",(0,a.kt)("a",{parentName:"p",href:"../api/store.mutate"},(0,a.kt)("inlineCode",{parentName:"a"},"store.mutate()"))),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Check ",(0,a.kt)("a",{parentName:"p",href:"../api/store.mutate#__destroy__"},(0,a.kt)("inlineCode",{parentName:"a"},"__destroy__"))," and ",(0,a.kt)("a",{parentName:"p",href:"../api/store.mutate#__identify__"},(0,a.kt)("inlineCode",{parentName:"a"},"__identify__")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="example-project/index.js"',title:'"example-project/index.js"'},'import { posts } from "./data.js";\n\nconst getPost = () => store.select({ from: "post", fields: ["id"], where: { id: 7 } })\n\n/**\n * Earlier, we defined this\n * \n * user.hasMany(post, "posts")\n * \n * Because we created this relationship when defining our model,\n * when a user is deleted, all orphaned posts are deleted\n * If you comment this line, the post will persist even after deleting the user.\n */\n\nstore.mutate(posts);\n\nconsole.log("Before", getPost())\n\nconst updatedUser = {\n  id: 1,\n  __identify__: "user",\n  __destroy__: true,\n}\n\nstore.mutate(updatedUser);\n\nconsole.log("After", getPost())\n')),(0,a.kt)("p",null,"All orphaned children are removed an all foreign key references are removed."),(0,a.kt)("p",null,"Run ",(0,a.kt)("inlineCode",{parentName:"p"},"node index.js")," and you should see this in the terminal."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"Before { id: 7 }\nAfter null\n")),(0,a.kt)("h2",{id:"delete-many-objects"},"Delete many objects"),(0,a.kt)("p",null,"This is the same as deleting one object, except we will pass an array of object to ",(0,a.kt)("a",{parentName:"p",href:"../api/store.mutate"},(0,a.kt)("inlineCode",{parentName:"a"},"store.mutate()"))),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"Using ",(0,a.kt)("a",{parentName:"mdxAdmonitionTitle",href:"../api/withOptions"},(0,a.kt)("inlineCode",{parentName:"a"},"withOptions()"))),(0,a.kt)("p",{parentName:"admonition"},"Here we used the helper function ",(0,a.kt)("a",{parentName:"p",href:"../api/withOptions"},(0,a.kt)("inlineCode",{parentName:"a"},"withOptions()"))," to apply a common payload to all ",(0,a.kt)("inlineCode",{parentName:"p"},"user")," objects in ",(0,a.kt)("inlineCode",{parentName:"p"},"usersToDelete"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'const usersToDelete = [{id: 1}, {id: 2}]\nstore.mutate(withOptions(usersToDelete, { __identify__: "user", __destroy__: true }));\n')))}u.isMDXComponent=!0}}]);